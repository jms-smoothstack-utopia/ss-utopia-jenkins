Parameters:
  EnvironmentName:
    Description: Environment Name
    Type: String
    Default: JenkinsCI
  InstanceType:
    Type: String
    Default: t3.large
    AllowedValues:
      - t3.large
  ImageId:
    Type: String
    Default: ami-03622eef30c1f7dbf
  AccessCidr:
    Type: String
  SSHKeyName:
    Type: String

Resources:
  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}::Vpc
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref Vpc
  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: 10.0.0.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value:  !Sub ${EnvironmentName}::PublicSubnet
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value:  !Sub ${EnvironmentName}::PublicRouteTable
  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet
  JenkinsBoxSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SSH ingress on specific IP. HTTP ingress for any (for accessing Jenkins container).
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}::JenkinsBoxSecGroup
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref AccessCidr
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 9000
          ToPort: 9000
          CidrIp: !Ref AccessCidr
      SecurityGroupEgress:
        - IpProtocol: "-1"
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
  JenkinsIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: jenkinsecr
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ecr:GetAuthorizationToken
                  - ecr:BatchGetImage
                  - ecr:InitiateLayerUpload
                  - ecr:UploadLayerPart
                  - ecr:CompleteLayerUpload
                  - ecr:BatchCheckLayerAvailability
                  - ecr:GetDownloadUrlForLayer
                  - ecr:PutImage
                Resource: '*'
  JenkinsIamInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref JenkinsIamRole
  JenkinsInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      ImageId:  !Ref ImageId
      IamInstanceProfile: !Ref JenkinsIamInstanceProfile
      KeyName: !Ref SSHKeyName
      SubnetId: !Ref PublicSubnet
      SecurityGroupIds:
        - Ref: JenkinsBoxSecGroup
      Tags:
        - Key: Name
          Value: JenkinsCI
        - Key: Project
          Value: ss-utopia

Outputs:
  Vpc:
    Description: ID of the VPC for this environment.
    Value: !Ref Vpc
    Export:
      Name: !Sub ${EnvironmentName}::Vpc
  PublicSubnet:
    Description: ID of the public subnet for this environment.
    Value: !Ref PublicSubnet
    Export:
      Name: !Sub ${EnvironmentName}::PublicSubnet
  JenkinsInstance:
    Description: ID of the EC2 instance of this stack.
    Value: !Ref JenkinsInstance
    Export:
      Name: !Sub ${EnvironmentName}::JenkinsInstance